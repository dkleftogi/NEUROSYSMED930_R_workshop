3 == (2 + 1)
"intermediate" != "r"
(1 + 2) > 4
katrien <- c(19, 22, 4, 5, 7)
katrien > 5
TRUE & TRUE
FALSE | TRUE
5 <= 5 & 2 < 3
3 < 4 | 7 < 6
num_attendees <- 30
if (num_attendees > 5) {
print("You're popular!")
}
primes <- c(2, 3, 5, 7, 11, 13)
# loop version 1
for (p in primes) {
print(p)
}
# loop version 2
for (i in 1:length(primes)) {
print(primes[i])
}
my_sqrt <- function(x) {
sqrt(x)
}
# use the function
my_sqrt(12)
my_sqrt <- function(x) {
sqrt(x)
}
# use the function
my_sqrt(16)
my_weird_sqrt <- function(x) {
sqrt(x)+1
}
my_weird_sqrt(16)
ourNames <- c('Dimi', 'Gon', 'Eirik','Anna','Nina','Kjell-Morten','Charis')
# loop version 1
for (p in ourNames) {
print(p)
}
# loop version 2
for (i in 1:length(ourNames)) {
print(ourNames[i])
}
my_matrix <- matrix(1:12, nrow=3,ncol=4, byrow = TRUE)
for (i in 1:nrow(my_matrix)) {
for(j in 1:ncol(my_matrix)){
print(my_matrix[i,j])
}
}
path
getwd()
setwd('/Users/kleftogi/Desktop/Journal_clubs_and_Students/R_programming_prep/My_R_repo/')
path <- file.path("/Users/kleftogi/Desktop/Journal_clubs_and_Students/R_programming_prep/My_R_repo/")
path.journals <- file.path(path, "journals.txt")
getwd()
path <- file.path("/Users/kleftogi/Desktop/Journal_clubs_and_Students/R_programming_prep/My_R_repo/")
path.journals <- file.path(path, "journals.txt")
path.journals   # inspect path name
Journals <- read.table(path.journals, header = TRUE)
path.journals
path <- file.path("/Users/kleftogi/Desktop/Journal_clubs_and_Students/R_programming_prep/My_R_repo/data")
path.journals <- file.path(path, "journals.txt")
path.journals   # inspect path name
Journals <- read.table(path.journals, header = TRUE)
head(Journals)
colnames(Journals)
rownames(Journals)
dim(Journals)
plot(log(Journals$subs), log(Journals$citations), data = Journals)
plot(log(Journals$subs), log(Journals$citations), data = Journals)
rug(log(Journals$subs))
rug(log(Journals$citations), side = 2)
plot(log(price) ~ log(subs), data = Journals, pch = 19,
col = "blue", xlim = c(0, 8), ylim = c(-7, 7),
main = "Library subscriptions")
rug(log(Journals$subs))
rug(log(Journals$price), side=2)
curve(dnorm, from = -5, to = 5, col = "red", lwd = 3,
main = "Density of the standard normal distribution")
library(ggplot2)
head(mpg)
ggplot(data = mpg)
ggplot(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(Journals) +
geom_point(aes(x = log(subs), y = log(citations)))
# lets add some color
ggplot(data = mpg) +
geom_point(aes(x = displ, y = hwy,
color = class))
ggplot(Journals) +
geom_point(aes(x = log(subs), y = log(citations),color=society))
ggplot(mpg) + geom_point(aes(x = displ, y = hwy, color = class))
ggplot(mpg) + geom_point(aes(x = displ, y = hwy, color = "blue"))
ggplot(mpg) + geom_point(aes(x = displ, y = hwy),color = "blue")
ggplot(mpg) + geom_point(aes(x = class, y = hwy))
ggplot(mpg) + geom_point(aes(x = class, y = hwy,size=cty))
ggplot(mpg) +
geom_boxplot(aes(x = class, y = hwy))
# and play with it
ggplot(mpg) +
geom_boxplot(aes(x = class, y = hwy,color=class))
ggplot(mpg) +
geom_boxplot(aes(x = class, y = hwy,color=class,fill=class))
ggplot(mpg) +
geom_boxplot(aes(x = class, y = hwy,fill=class))
ggplot(mpg) +
geom_boxplot(aes(x = class, y = hwy,fill=class),
width=0.28,
outlier.colour = "red",
outlier.shape = 1,
outlier.fill = "red",
outlier.size = 0.2,notch = TRUE)
ggplot(mpg) +
geom_boxplot(aes(x = class, y = hwy,fill=class),
width=0.28,
outlier.colour = "red",
outlier.shape = 1,
outlier.fill = "red",
outlier.size = 0.2,notch = TRUE)+
theme_classic()
ggplot(mpg) +
geom_boxplot(aes(x = class, y = hwy,fill=class),
width=0.28,
outlier.colour = "red",
outlier.shape = 1,
outlier.fill = "red",
outlier.size = 0.2,notch = TRUE)+
theme_classic() +
ylab('highway miles per gallon')+
theme(axis.text.y = element_text( size = 10 ),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 10),
axis.title.x = element_blank(),
axis.title.y = element_text( size = 10, face='bold' ),
legend.position = "none",
aspect.ratio = 0.8)
path
output_file <- file.path(path, "my_first_nice_boxplot.pdf")
ggsave(output_file)
output_file <- file.path(path, "my_first_nice_boxplot.png")
ggsave(output_file
)
ggplot(mpg) +
geom_histogram(aes(x = hwy))+
theme_minimal()
ggplot(mpg) +
geom_density(aes(x = hwy),color='red')+
theme_minimal()
ggplot(mpg,aes(x = hwy)) +
geom_histogram(aes(y = ..density..),
colour = 1, fill = "white") +
geom_density(lwd = 1, colour = 'red',
fill = 'lightblue', alpha = 0.25) +
theme_minimal()
ggplot(mpg,aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth()+
theme_minimal()
#showing that simple coloring provides already good understanding of patterns in the data
ggplot(mpg,aes(x = displ, y = hwy)) +
geom_point(aes(color = drv)) +
geom_smooth()+
theme_minimal()+
theme(legend.position = "bottom")
#introducing the facet_wrap function that is very helpful
ggplot(mpg,aes(x = displ, y = hwy)) +
geom_point(aes(color = drv)) +
geom_smooth()+
facet_wrap(~drv,nrow=3)+
theme_bw()+
theme(legend.position = "none",aspect.ratio = 1)
head(diamonds)
table(diamonds$cut)
diamonds$price %>% mean()
library(tidyverse)
#2.5
head(diamonds)
table(diamonds$cut)
diamonds$price %>% mean()
diamonds$price %>% sqrt()
filter(diamonds, cut == "Ideal")
ideal_diamonds <- diamonds %>% filter(cut == "Ideal")
# 2.5.2 mutate
mutate(diamonds, price_per_carat = price/carat)
diamonds_updated <- mutate(diamonds, price_per_carat = price/carat)
expensive_diamonds <- diamonds %>% mutate(price_per_carat = price/carat) %>%
filter(price_per_carat > 1500)
filter(diamonds, cut == "Ideal")
ideal_diamonds <- diamonds %>% filter(cut == "Ideal")
# 2.5.2 mutate
mutate(diamonds, price_per_carat = price/carat)
diamonds_updated <- mutate(diamonds, price_per_carat = price/carat)
expensive_diamonds <- diamonds %>% mutate(price_per_carat = price/carat) %>%
filter(price_per_carat > 1500)
diamonds %>%
mutate(price_per_carat = price/carat) %>%
group_by(cut,color) %>%
summarize(mean_carat = mean(carat),
sd_carat = sd(carat),
mean_price_per_carat = mean(price_per_carat),
sd_price_per_carat = sd(price_per_carat),
mean_depth = mean(depth),
sd_depth = sd(depth))
diamonds %>%
mutate(price_per_carat = price/carat) %>%
group_by(cut,color) %>%
summarize(mean_carat = mean(carat),
se_carat = sd(carat)/length(carat),
mean_price_per_carat = mean(price_per_carat),
se_price_per_carat = sd(price_per_carat)/length(price_per_carat),
mean_depth = mean(depth),
se_depth = sd(depth)/length(depth)) %>%
ggplot(aes(x=mean_price_per_carat,y=mean_depth,color=cut)) +
geom_point(size=1)+
theme_bw()+
theme(legend.position = "bottom")
diamonds %>%
mutate(price_per_carat = price/carat) %>%
group_by(cut,color) %>%
summarize(mean_carat = mean(carat),
se_carat = sd(carat)/length(carat),
mean_price_per_carat = mean(price_per_carat),
se_price_per_carat = sd(price_per_carat)/length(price_per_carat),
mean_depth = mean(depth),
se_depth = sd(depth)/length(depth)) %>%
ggplot(aes(x=mean_price_per_carat,y=mean_depth,color=cut)) +
geom_point(size=1.2)+
ylab('mean depth')+
xlab('mean price per carat Â± std error')+
geom_errorbar(aes(xmin=mean_price_per_carat-se_price_per_carat,
xmax=mean_price_per_carat+se_price_per_carat), width=.15,
position=position_dodge(0.05))+
theme_bw()+
theme(legend.position = "bottom")
